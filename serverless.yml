service:
  name: usrv-heros
# this plugins are for using with weback and javascript
plugins:
  - serverless-bundle
  - serverless-pseudo-parameters

#this contains the information about the provider in this case
provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 256
  stage: ${opt:stage, 'dev'}
  region: sa-east-1
  environment:
    HEROS_TABLE_NAME: ${self:custom.HerosTable.name}
    HEROS_ARN: ${self:custom.HerosTable.arn}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:UpdateItem
        - dynamodb:Query
      Resource:
        - ${self:custom.HerosTable.arn}
        - !Join [
            "/",
            ["${self:custom.HerosTable.arn}", "index", "statusAndEndDate"],
          ]
#Whe need to declare a new arn beacuse when we declare a global index is like a copy from our table
# The Join sintax is goit to do somethin like this ${self:custom.HerosTable.arn}/index/statusAndEndDate and we need to use with join
resources:
  Resources:
    HerosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: HerosTable-${self:provider.stage}
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: endingAt
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: statusAndEndDate
            KeySchema:
              - AttributeName: status
                KeyType: HASH
              - AttributeName: endingAt
                KeyType: RANGE
            Projection: #Dynamo create a virutal copy of the table an use ALL the atributes on the table
              ProjectionType: ALL

  # With Key Schema i'm telling My Attribute id is the key and it is a HASH from string
  #create a custom object with !Ref i make a reference to
#Ref can be used with parameters or resources in this case the resource HerosTable and it returns the phisycalID
#With GettAtt we can access to Attributes
custom:
  HerosTable:
    name: !Ref HerosTable
    arn: !GetAtt HerosTable.Arn
  bundle:
    linting: false

functions:
  createHero:
    handler: src/handlers/CreateHeroHandler.handler
    events:
      - http:
          method: POST
          path: /hero
  getHeros:
    handler: src/handlers/GetHerosHandler.handler
    events:
      - http:
          method: GET
          path: /heros
  getHero:
    handler: src/handlers/GetHeroHandler.handler
    events:
      - http:
          method: GET
          path: /hero/{id}
  patchImageHero:
    handler: src/handlers/PatchImageHeroHandler.handler
    events:
      - http:
          method: PATCH
          path: /hero/{id}/imageUrl
  scheduleHeroDead:
    handler: src/handlers/ScheduleHeroDeadHandler.handler
    events:
      - schedule: rate(1 minute)
  syncHeros:
    handler: src/handlers/SyncHerosHandler.handler
    events:
      - stream:
          type: dynamodb
          arn: { "Fn::GetAtt": ["HerosTable", "StreamArn"] }
